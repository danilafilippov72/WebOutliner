{"version":3,"file":"main.js","mappingshxajunnptttpnxnxzczcrznzWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnntXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChhhvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AENA;AACA;AACA;AACA","sources":["webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/AddAnimationMethod/AddAnimationMethod.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/AddMethod/AddMethod.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Document/Document.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/ObjectNode/ObjectNode.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/FormNode/FormNode.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/MethodsNode/MethodsNode.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/ObjectNodeText/ObjectNodeText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/OutlineVertical/OutlineVertical.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/FormBox/FormBox.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/FormText/FormText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/ObjectMethodBox/ObjectMethodBox.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/ObjectMethodsText/ObjectMethodsText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/OutlineHor/OutlineHor.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/WindowForm/WindowForm.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/ElementCreator/ElementCreator.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/InformationHandlers/InformationHandlers.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/OtherMethods/OtherMethods.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/ElementImage/ElementImage.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/ElementPaddingLeft/ElementPaddingLeft.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/ElementPaddingTop/ElementPaddingTop.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/InformationHandlersText/InformationHandlersText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/Method/Method.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/ObjectReferenceHandlersNode/ObjectReferenceHandlersNode.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/Compounds/SpaceMethods/SpaceMethods.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/InformationNode/InformationNode.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/ObjectReferenceHandlerText/ObjectReferenceHandlerText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/Compounds/OutlineHor/OutlineHor.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/InformationBoxText/InformationBoxText.tsx","webpack://asp.net/./Data/Elements/Compounds/Compounds/InformationBox/InformationBox.tsx","webpack://asp.net/./Data/Elements/Compounds/CurrentMethodText/CurrentMethodText.tsx","webpack://asp.net/./Data/Elements/Compounds/CurrentMethod/CurrentMethod.tsx","webpack://asp.net/./Data/Elements/Compounds/OtherMethodsText/OtherMethodsText.tsx","webpack://asp.net/./Data/Elements/Compounds/OtherMethods/OtherMethods.tsx","webpack://asp.net/webpack/bootstrap","webpack://asp.net/webpack/runtime/define property getters","webpack://asp.net/webpack/runtime/global","webpack://asp.net/webpack/runtime/hasOwnProperty shorthand","webpack://asp.net/webpack/runtime/make namespace object","webpack://asp.net/webpack/before-startup","webpack://asp.net/webpack/startup","webpack://asp.net/webpack/after-startup"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar AddAnimationMethod = /** @class */ (function () {\r\n    function AddAnimationMethod() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = AddAnimationMethod.Form;\r\n        this.Methods = AddAnimationMethod.Methods;\r\n        this.Elements = AddAnimationMethod.Elements;\r\n        this.References = AddAnimationMethod.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    AddAnimationMethod.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"AddAnimationMethod\",\r\n            _b.Border = {\r\n                borderWidth: {\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 3,\r\n                    top: 0\r\n                },\r\n                padding: 8,\r\n                borderType: \"solid\",\r\n                borderColor: \"white\"\r\n            },\r\n            _b.gridArea = [1, 1],\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    AddAnimationMethod.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        AddAnimationMethod.Identificator = global.count.toString();\r\n                        if (AddAnimationMethod.InstanceIdentificator == null)\r\n                            AddAnimationMethod.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", AddAnimationMethod.InstanceIdentificator);\r\n                        object = AddAnimationMethod.Form.Image.ApplyImage(object);\r\n                        if (AddAnimationMethod.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(AddAnimationMethod.Form.Image.Text));\r\n                        Object.values(AddAnimationMethod.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(AddAnimationMethod.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    AddAnimationMethod.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    AddAnimationMethod.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return AddAnimationMethod;\r\n}());\r\nexport { AddAnimationMethod };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Method } from \"../Compounds/Method/Method\";\r\nvar AdddMethod = /** @class */ (function () {\r\n    function AdddMethod() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = AdddMethod.Form;\r\n        this.Methods = AdddMethod.Methods;\r\n        this.Elements = AdddMethod.Elements;\r\n        this.References = AdddMethod.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\r\n    AdddMethod.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.minHeight) + \"px\"));\r\n                    if (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.maxHeight) + \"px\"));\r\n                    if (((_w = Image.Border) === null || _w === void 0 ? void 0 : _w.borderWidth) != null) {\r\n                        if (((_x = Image.Border.borderWidth) === null || _x === void 0 ? void 0 : _x.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_2 = Image.Border) === null || _2 === void 0 ? void 0 : _2.padding) != null) {\r\n                        if (((_3 = Image.Border.padding) === null || _3 === void 0 ? void 0 : _3.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"AddMethod\",\r\n            _b.Border = {\r\n                padding: 8\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridArea = [1, 2],\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    AdddMethod.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        AdddMethod.Identificator = global.count.toString();\r\n                        if (AdddMethod.InstanceIdentificator == null)\r\n                            AdddMethod.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", AdddMethod.InstanceIdentificator);\r\n                        object = AdddMethod.Form.Image.ApplyImage(object);\r\n                        if (AdddMethod.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(AdddMethod.Form.Image.Text));\r\n                        Object.values(AdddMethod.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    if (InformationHandler.isListener == false) {\r\n                        console.log(\"ExtensionLackListeners\", AdddMethod.Identificator);\r\n                        document.querySelectorAll('[instanceidentificator=\"' + AdddMethod.InstanceIdentificator + '\"]')\r\n                            .forEach(function (element) { return element.addEventListener(\"Outline\", function (event) { InformationHandler.Initialize(event.detail); }); });\r\n                        InformationHandler.isListener = true;\r\n                    }\r\n                    Object.values(AdddMethod.Elements).forEach(function (childElement) { console.log(childElement); childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = true,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"HoverIn\");\r\n                        }\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"HoverOut\");\r\n                        }\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = true,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"HoverOver\");\r\n                            document.querySelector('[identificator=\"' + Identificator + '\"]').animate([\r\n                                {\r\n                                    transform: 'scale(1, 1)',\r\n                                    boxShadow: \"2px 2px 7px 4px rgba(0,0,0,0)\"\r\n                                },\r\n                                {\r\n                                    transform: 'scale(1.2, 1.2);',\r\n                                    boxShadow: \"2px 2px 7px 4px rgba(255,255,255,0.3)\"\r\n                                },\r\n                                {\r\n                                    transform: 'scale(1, 1)',\r\n                                    boxShadow: \"2px 2px 7px 4px rgba(0,0,0,0)\"\r\n                                }\r\n                            ], {\r\n                                duration: 300,\r\n                                direction: \"normal\",\r\n                                fill: \"backwards\"\r\n                            });\r\n                        }\r\n                    ],\r\n                    _k),\r\n                _e.Move = (_m = /** @class */ (function () {\r\n                        function Move() {\r\n                        }\r\n                        return Move;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n                       \r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClick = (_p = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = true,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            return __awaiter(this, void 0, void 0, function () {\r\n                                var _a, _b;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0:\r\n                                            console.log(\"LeftClick\", Identificator);\r\n                                            _b = (_a = document.querySelector('[identificator=\"' + Identificator + '\"]').parentElement.parentElement).prepend;\r\n                                            return [4 /*yield*/, Method.Methods.Create()];\r\n                                        case 1:\r\n                                            _b.apply(_a, [(_c.sent())]);\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    ],\r\n                    _p),\r\n                _e.LeftClickHolding = (_r = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _r.CurrentMethod = (_s = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _r.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _s.MethodIndex = 0,\r\n                        _s.Response = false,\r\n                        _s),\r\n                    _r.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"LeftClickHolding\");\r\n                        }\r\n                    ],\r\n                    _r),\r\n                _e),\r\n            //#region Hidden\r\n            _d.isListener = false,\r\n            _d),\r\n        _c);\r\n    AdddMethod.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    AdddMethod.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return AdddMethod;\r\n}());\r\nexport { AdddMethod };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { ObjectNode } from \"../../../../ObjectNode/ObjectNode\";\r\nvar Document = /** @class */ (function () {\r\n    function Document() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = Document.Form;\r\n        this.Methods = Document.Methods;\r\n        this.Elements = Document.Elements;\r\n        this.References = Document.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\r\n    Document.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                ;\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _e, _g, _j, _l, _o, _q, _s, _u, _v, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (Image.Border.Margin) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_b = Image.Border) === null || _b === void 0 ? void 0 : _b.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (Image.Border.width + \"px\"));\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) + \"px\"));\r\n                    if (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) + \"px\"));\r\n                    if (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) + \"px\"));\r\n                    if (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.maxHeight) + \"px\"));\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderWidth) != null) {\r\n                        if (Image.Border.borderWidth) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_2 = Image.Border) === null || _2 === void 0 ? void 0 : _2.padding) != null) {\r\n                        if (Image.Border.padding) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null)\r\n                        element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                width: \"100%\",\r\n                padding: 10,\r\n                /* height: \"1000px\", */\r\n                backgroundColor: \"black\"\r\n            },\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    Document.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        Document.Identificator = global.count.toString();\r\n                        if (Document.InstanceIdentificator == null)\r\n                            Document.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", Document.InstanceIdentificator);\r\n                        object = Document.Form.Image.ApplyImage(object);\r\n                        if (Document.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(Document.Form.Image.Text));\r\n                        Object.values(Document.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            Methods.Init = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _a, _b, Mouse;\r\n                    return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                global.count = 1;\r\n                                console.log(performance.now());\r\n                                _b = (_a = document.body).appendChild;\r\n                                return [4 /*yield*/, Document.Methods.Create()];\r\n                            case 1:\r\n                                _b.apply(_a, [_c.sent()]);\r\n                                document.body.style.pointerEvents = \"all\";\r\n                                document.body.onmousedown = function (event) { return Mouse.onEvent(event, Mouse.eventTypes.onMouseDown); };\r\n                                document.body.onmouseup = function (event) {\r\n                                    console.log(\"document.body.onmouseup document.body.onmouseup document.body.onmouseup document.body.onmouseup\");\r\n                                    Mouse.onEvent(event, Mouse.eventTypes.onMouseUp);\r\n                                };\r\n                                document.body.onmouseenter = function (ev) { return Document.Methods.InformationHandler.Initialize({\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverIn\",\r\n                                    Properties: ev,\r\n                                    Identificator: event.target.getAttribute('identificator')\r\n                                }); }; /*  MouseHandler.HoverIn.CurrentMethod.Run(Information.Identificator, Information.Properties); */\r\n                                document.body.onmouseleave = function (ev) { return Document.Methods.InformationHandler.Initialize({\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverOut\",\r\n                                    Properties: ev,\r\n                                    Identificator: event.target.getAttribute('identificator')\r\n                                }); }; /*  MouseHandler.HoverOut.CurrentMethod.Run(Information.Identificator, Information.Properties); */\r\n                                document.body.onmousemove = function (ev) { return Document.Methods.InformationHandler.Initialize({\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"Move\",\r\n                                    Properties: ev,\r\n                                    Identificator: event.target.getAttribute('identificator')\r\n                                }); };\r\n                                document.body.onmouseover = function (ev) { return Document.Methods.InformationHandler.Initialize({\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverOver\",\r\n                                    Properties: ev,\r\n                                    Identificator: event.target.getAttribute('identificator')\r\n                                }); };\r\n                                Mouse = /** @class */ (function () {\r\n                                    function Mouse() {\r\n                                    }\r\n                                    Mouse.setOnMouseDown = function (onMouseDown) { this.onMouseDown = onMouseDown; };\r\n                                    Mouse.setNextOnMouseUp = function (onMouseUp) { this.onMouseUp = onMouseUp; };\r\n                                    Mouse.setTimeOut = function (event, timeInMs, afterTimingFunction) {\r\n                                        var _this = this;\r\n                                        clearTimeout(this.timeout);\r\n                                        this.timeout = setTimeout(function () { return afterTimingFunction(_this.event); }, timeInMs);\r\n                                    };\r\n                                    Mouse.onEvent = function (event, mouseEvent /* type typesOf<T> = T[keyof T]; */) {\r\n                                        var _this = this;\r\n                                        console.log(mouseEvent);\r\n                                        if (this.isActiveListener == true) {\r\n                                            this.event = event;\r\n                                            switch (mouseEvent) {\r\n                                                case this.eventTypes.onMouseDown:\r\n                                                    {\r\n                                                        switch (this.onMouseDown) {\r\n                                                            case this.onMouseTypes.first:\r\n                                                                {\r\n                                                                    this.setOnMouseDown(this.onMouseTypes.second);\r\n                                                                    this.setTimeOut(this.event, 100, function () {\r\n                                                                        _this.setOnMouseDown(_this.onMouseTypes.first);\r\n                                                                        _this.setNextOnMouseUp(_this.onMouseTypes.first);\r\n                                                                        console.log(_this.event);\r\n                                                                        Document.Methods.InformationHandler.Initialize({\r\n                                                                            ObjectReference: \"MouseHandler\",\r\n                                                                            Method: \"LeftClickHoldingDown\",\r\n                                                                            Properties: _this.event,\r\n                                                                            Identificator: _this.event.target.getAttribute('identificator')\r\n                                                                        });\r\n                                                                        /* MouseHandler.LeftClickHolding.CurrentMethod.Run(event); */\r\n                                                                    });\r\n                                                                }\r\n                                                                break;\r\n                                                            case this.onMouseTypes.second:\r\n                                                                {\r\n                                                                    clearTimeout(this.timeout);\r\n                                                                    this.setOnMouseDown(this.onMouseTypes.first);\r\n                                                                }\r\n                                                                break;\r\n                                                        }\r\n                                                    }\r\n                                                    break;\r\n                                                case this.eventTypes.onMouseUp:\r\n                                                    {\r\n                                                        switch (this.onMouseUp) {\r\n                                                            case this.onMouseTypes.first:\r\n                                                                {\r\n                                                                    console.log('smth');\r\n                                                                    clearTimeout(this.timeout);\r\n                                                                    console.log(Document.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.MethodIndex);\r\n                                                                    if (Document.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.MethodIndex == 1) {\r\n                                                                        console.log(this.eventTypes.onMouseDown, \"this.onMouseDown\", this.onMouseDown, this.onMouseUp);\r\n                                                                        Document.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Set(0);\r\n                                                                        Document.Methods.InformationHandler.Initialize({\r\n                                                                            ObjectReference: \"MouseHandler\",\r\n                                                                            Method: \"LeftClickHoldingUp\",\r\n                                                                            Properties: this.event,\r\n                                                                            Identificator: this.event.target.getAttribute('identificator')\r\n                                                                        });\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        this.setNextOnMouseUp(this.onMouseTypes.second);\r\n                                                                        this.setTimeOut(this.event, /* Mouse.LeftDoubleClick.LeftDoubleClickDelay */ 100, function (event) {\r\n                                                                            _this.setOnMouseDown(_this.onMouseTypes.first);\r\n                                                                            _this.setNextOnMouseUp(_this.onMouseTypes.first);\r\n                                                                            Document.Methods.InformationHandler.Initialize({\r\n                                                                                ObjectReference: \"MouseHandler\",\r\n                                                                                Method: \"LeftClick\",\r\n                                                                                Properties: event,\r\n                                                                                Identificator: event.target.getAttribute('identificator')\r\n                                                                            });\r\n                                                                            /* MouseHandler.LeftClick.CurrentMethod.Run(event); */\r\n                                                                        });\r\n                                                                    }\r\n                                                                }\r\n                                                                break;\r\n                                                            case this.onMouseTypes.second:\r\n                                                                {\r\n                                                                    console.log('dfgdfg');\r\n                                                                    clearTimeout(this.timeout);\r\n                                                                    /* Mouse.LeftDoubleClick.Run(Information.Identificator, Information.Properties); */\r\n                                                                    this.setNextOnMouseUp(this.onMouseTypes.first);\r\n                                                                }\r\n                                                                break;\r\n                                                            case this.onMouseTypes.none:\r\n                                                                {\r\n                                                                    console.log('2222');\r\n                                                                    clearTimeout(this.timeout);\r\n                                                                    this.setNextOnMouseUp(this.onMouseTypes.first);\r\n                                                                }\r\n                                                                break;\r\n                                                        }\r\n                                                    }\r\n                                                    break;\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    Mouse.eventTypes = { onMouseDown: \"onMouseDown\", onMouseUp: \"onMouseUp\", onMouseIn: \"onMouseIn\" };\r\n                                    Mouse.isActiveListener = true;\r\n                                    Mouse.onMouseTypes = { first: \"first\", second: \"second\", none: \"none\" };\r\n                                    Mouse.onMouseDown = Mouse.onMouseTypes.first;\r\n                                    Mouse.onMouseUp = Mouse.onMouseTypes.first;\r\n                                    Mouse.timeout = setTimeout(function () { }, 100);\r\n                                    return Mouse;\r\n                                }());\r\n                                Document.Elements.ObjectNode.Methods.InformationHandler.ExtensionLackListeners();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            ;\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        return __awaiter(this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                MouseHandler[Information.Method].CurrentMethod.Run(Information);\r\n                                return [2 /*return*/];\r\n                            });\r\n                        });\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverIn\",\r\n                                    Identificator: Identificator\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverOut\",\r\n                                    Identificator: Identificator\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = true,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"HoverOver\",\r\n                                    Identificator: Identificator\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _k),\r\n                _e.Move = (_m = /** @class */ (function () {\r\n                        function Move() {\r\n                        }\r\n                        return Move;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = true,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"Move\",\r\n                                    Identificator: Identificator,\r\n                                    Properties: {\r\n                                        Coordinates: { x: event.x, y: event.y }\r\n                                    }\r\n                                }\r\n                            }));\r\n                        },\r\n                        function (event, Identificator) {\r\n                            _d.Initialize({\r\n                                ObjectReference: \"ElementPaddingTop\",\r\n                                Identificator: global.objectMovement,\r\n                                Method: \"MouseCoordinates\",\r\n                                Properties: {\r\n                                    Coordinates: {\r\n                                        x: event.x,\r\n                                        y: event.y\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    ],\r\n                    _m),\r\n                _e.LeftClick = (_p = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = true,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            console.log(document.elementFromPoint(event.x, event.y), new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"LeftClick\",\r\n                                    Identificator: Identificator\r\n                                }\r\n                            }));\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"LeftClick\",\r\n                                    Identificator: Identificator\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _p),\r\n                _e.LeftClickHoldingDown = (_r = /** @class */ (function () {\r\n                        function LeftClickHoldingDown() {\r\n                        }\r\n                        return LeftClickHoldingDown;\r\n                    }()),\r\n                    _r.CurrentMethod = (_s = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _r.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _s.MethodIndex = 0,\r\n                        _s.Response = true,\r\n                        _s),\r\n                    _r.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.elementFromPoint(event.x, event.y).dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"LeftClickHoldingDown\",\r\n                                    Identificator: Identificator,\r\n                                    Properties: {\r\n                                        Coordinates: { x: event.x, y: event.y }\r\n                                    }\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _r),\r\n                _e.LeftClickHoldingUp = (_t = /** @class */ (function () {\r\n                        function LeftClickHoldingUp() {\r\n                        }\r\n                        return LeftClickHoldingUp;\r\n                    }()),\r\n                    _t.CurrentMethod = (_u = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _t.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _u.MethodIndex = 0,\r\n                        _u.Response = true,\r\n                        _u),\r\n                    _t.OtherMethods = [\r\n                        function (event, Identificator) {\r\n                            document.querySelector('[identificator=\"' + global.objectMovement + '\"]').dispatchEvent(new CustomEvent('Outline', {\r\n                                detail: {\r\n                                    ObjectReference: \"MouseHandler\",\r\n                                    Method: \"LeftClickHoldingUp\",\r\n                                    Identificator: Identificator,\r\n                                    Properties: {\r\n                                        Coordinates: { x: event.x, y: event.y }\r\n                                    }\r\n                                }\r\n                            }));\r\n                        }\r\n                    ],\r\n                    _t),\r\n                _e),\r\n            _d.ElementPaddingTop = (_v = /** @class */ (function () {\r\n                    function ElementPaddingTop() {\r\n                    }\r\n                    ElementPaddingTop.Initialize = function (Information) {\r\n                        return __awaiter(this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                ElementPaddingTop[Information.Method].CurrentMethod.Run(Information);\r\n                                return [2 /*return*/];\r\n                            });\r\n                        });\r\n                    };\r\n                    return ElementPaddingTop;\r\n                }()),\r\n                _v.MouseCoordinates = (_w = /** @class */ (function () {\r\n                        function MouseCoordinates() {\r\n                        }\r\n                        return MouseCoordinates;\r\n                    }()),\r\n                    _w.CurrentMethod = (_x = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Information) {\r\n                                if (CurrentMethod.Response)\r\n                                    _w.OtherMethods[CurrentMethod.MethodIndex](Information.Properties, Information.Identificator);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _x.MethodIndex = 0,\r\n                        _x.Response = true,\r\n                        _x),\r\n                    _w.OtherMethods = [\r\n                        function (Properties, Identificator) {\r\n                            var object = global.search.FindObjectByIdentificator(global.objectMovement, Document);\r\n                            object.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Response = true;\r\n                            object.Methods.InformationHandler.Initialize({\r\n                                ObjectReference: \"MouseHandler\",\r\n                                Identificator: global.objectMovement,\r\n                                Method: \"Move\",\r\n                                Properties: { Coordinates: Properties.Coordinates }\r\n                            });\r\n                        }\r\n                    ],\r\n                    _w),\r\n                _v),\r\n            _d),\r\n        _c);\r\n    Document.Elements = (_y = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _y.ObjectNode = ObjectNode,\r\n        _y);\r\n    Document.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return Document;\r\n}());\r\nexport { Document };\r\nvar Search = /** @class */ (function () {\r\n    function Search() {\r\n    }\r\n    Search.FindObjectByIdentificator = function (Identificator, object) {\r\n        //console.log(\"Need to find: \", Identificator);\r\n        /* console.log(Identificator, (object as typeof Document).name,   (object as typeof Document).Identificator); */\r\n        if (Number(object.Identificator) == Number(Identificator))\r\n            return object;\r\n        else {\r\n            /*   console.log(Object.values(object.Elements)\r\n                  .find(childObject => {\r\n                      console.log(Number(Identificator) <= Number((childObject as typeof Document)));\r\n                      Number(Identificator) <= Number((childObject as typeof Document))\r\n                  })); */\r\n            /* console.log(\"Need to find: \", Identificator);\r\n            console.log(Object.values(object.Elements).sort((childObject1,childObject2) => Number((childObject1 as typeof Document).Identificator) -  Number((childObject2 as typeof Document).Identificator))\r\n                .forEach((childObject, index) => {\r\n                    console.table([(childObject as typeof Document).name, (childObject as typeof Document).Identificator]);\r\n                //console.log(\"    \", (childObject as typeof Document).name, \" Identificator: \", (childObject as typeof Document).Identificator);\r\n                 (Number(Identificator) >= Number((childObject as typeof Document).Identificator\r\n                    || (Object.values(object.Elements).length > index + 1\r\n                        && Number((Object.values(object.Elements)[index + 1] as typeof Document).Identificator) > Number(Identificator))\r\n                ))\r\n            })) */\r\n            return Search.FindObjectByIdentificator(Identificator, Object.values(object.Elements).sort()\r\n                .find(function (childObject, index) {\r\n                /*  console.log(\"    \", (childObject as typeof Document).name, \" Identificator: \", (childObject as typeof Document).Identificator);\r\n                 console.log(\"          \", (Number(Identificator) >= Number((childObject as typeof Document).Identificator))); */\r\n                return (Number(Identificator) >= Number(childObject.Identificator\r\n                    || (Object.values(object.Elements).length > index + 1\r\n                        && Number(Object.values(object.Elements)[index + 1].Identificator) > Number(Identificator))));\r\n            }));\r\n        }\r\n        /*\r\n         .forEach((childObject, index) => {\r\n         //console.log(Identificator, (childObject as typeof Document).name, );\r\n         //console.log(\"    \", (childObject as typeof Document).name, \" Identificator: \", (childObject as typeof Document).Identificator);\r\n         \r\n         if ((childObject as typeof Document).Identificator == Identificator) {\r\n             console.log((childObject as typeof Document).Form.Image.gridRowsWidth, Identificator)\r\n             return childObject\r\n         }\r\n         else {\r\n             if ((childObject as typeof Document).Identificator)\r\n                 return this.FindObjectByIdentificator(Identificator, childObject)\r\n         }\r\n     }); */\r\n    };\r\n    return Search;\r\n}());\r\nglobalThis.Doc = Document;\r\nglobalThis.search = Search;\r\nDocument.Methods.Init();\r\ndocument.body.style.backgroundColor = \"#000000\";\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { OutlineVertical } from \"../../OutlineVertical/OutlineVertical\";\r\nimport { MethodsNode } from \"../../MethodsNode/MethodsNode\";\r\nimport { ObjectNodeText } from \"../../ObjectNodeText/ObjectNodeText\";\r\nimport { FormNode } from \"../../FormNode/FormNode\";\r\nvar ObjectNode = /** @class */ (function () {\r\n    function ObjectNode() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectNode.Form;\r\n        this.Methods = ObjectNode.Methods;\r\n        this.Elements = ObjectNode.Elements;\r\n        this.References = ObjectNode.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    ObjectNode.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                height: \"100%\",\r\n                borderWidth: 2,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplate = '\"a a\" auto \"c d\" auto \"c e\" auto / 30px auto',\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectNode.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        ObjectNode.Identificator = global.count.toString();\r\n                        if (ObjectNode.InstanceIdentificator == null)\r\n                            ObjectNode.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectNode.InstanceIdentificator);\r\n                        object = ObjectNode.Form.Image.ApplyImage(object);\r\n                        if (ObjectNode.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ObjectNode.Form.Image.Text));\r\n                        Object.values(ObjectNode.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectNode.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectNode.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.ObjectNodeText = ObjectNodeText,\r\n        _r.OutlineVertical = OutlineVertical,\r\n        _r.MethodsNode = MethodsNode,\r\n        _r.FormNode = FormNode,\r\n        _r);\r\n    ObjectNode.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectNode;\r\n}());\r\nexport { ObjectNode };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { FormBox } from \"../../FormBox/FormBox\";\r\nimport { FormText } from \"../../FormText/FormText\";\r\nimport { OutlineHor } from \"../../OutlineHor/OutlineHor\";\r\nvar FormNode = /** @class */ (function () {\r\n    function FormNode() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = FormNode.Form;\r\n        this.Methods = FormNode.Methods;\r\n        this.Elements = FormNode.Elements;\r\n        this.References = FormNode.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    FormNode.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\")\r\n                            element.style.gridArea = Image.gridArea;\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.gridTemplate = ' \"a b\" auto \"c d\" auto / 30px auto ',\r\n            _b.Display = \"grid\",\r\n            _b.gridArea = \"e\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    FormNode.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        FormNode.Identificator = global.count.toString();\r\n                        if (FormNode.InstanceIdentificator == null)\r\n                            FormNode.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", FormNode.InstanceIdentificator);\r\n                        object = FormNode.Form.Image.ApplyImage(object);\r\n                        if (FormNode.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(FormNode.Form.Image.Text));\r\n                        Object.values(FormNode.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(FormNode.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    FormNode.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.FormText = FormText,\r\n        _r.FormBox = FormBox,\r\n        _r.OutlineHor = OutlineHor,\r\n        _r);\r\n    FormNode.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return FormNode;\r\n}());\r\nexport { FormNode };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { ObjectMethodBox } from \"../../ObjectMethodBox/ObjectMethodBox\";\r\nimport { ObjectMethodsText } from \"../../ObjectMethodsText/ObjectMethodsText\";\r\nimport { OutlineHor } from \"../../OutlineHor/OutlineHor\";\r\nvar MethodsNode = /** @class */ (function () {\r\n    function MethodsNode() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = MethodsNode.Form;\r\n        this.Methods = MethodsNode.Methods;\r\n        this.Elements = MethodsNode.Elements;\r\n        this.References = MethodsNode.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    MethodsNode.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\")\r\n                            element.style.gridArea = Image.gridArea;\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                Margin: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 10,\r\n                    top: 0\r\n                }\r\n            },\r\n            _b.gridTemplate = ' \"a b\" auto \"c d\" auto / 30px auto ',\r\n            _b.Display = \"grid\",\r\n            _b.gridArea = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    MethodsNode.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        MethodsNode.Identificator = global.count.toString();\r\n                        if (MethodsNode.InstanceIdentificator == null)\r\n                            MethodsNode.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", MethodsNode.InstanceIdentificator);\r\n                        object = MethodsNode.Form.Image.ApplyImage(object);\r\n                        if (MethodsNode.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(MethodsNode.Form.Image.Text));\r\n                        Object.values(MethodsNode.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(MethodsNode.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    MethodsNode.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.ObjectMethodsText = ObjectMethodsText,\r\n        _r.ObjectMethodBox = ObjectMethodBox,\r\n        _r.OutlineHor = OutlineHor,\r\n        _r);\r\n    MethodsNode.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return MethodsNode;\r\n}());\r\nexport { MethodsNode };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar ObjectNodeText = /** @class */ (function () {\r\n    function ObjectNodeText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectNodeText.Form;\r\n        this.Methods = ObjectNodeText.Methods;\r\n        this.Elements = ObjectNodeText.Elements;\r\n        this.References = ObjectNodeText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    ObjectNodeText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"ObjectNodeText\",\r\n            _b.gridArea /* = [1,1] */ = \"a\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectNodeText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                var _a;\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_b) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectNodeText.InstanceIdentificator);\r\n                        object = ObjectNodeText.Form.Image.ApplyImage(object);\r\n                        if (((_a = ObjectNodeText.Form.Image) === null || _a === void 0 ? void 0 : _a.Text) != null)\r\n                            object.appendChild(document.createTextNode(ObjectNodeText.Form.Image.Text));\r\n                        Object.values(ObjectNodeText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectNodeText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectNodeText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ObjectNodeText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectNodeText;\r\n}());\r\nexport { ObjectNodeText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar OutlineVertical = /** @class */ (function () {\r\n    function OutlineVertical() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OutlineVertical.Form;\r\n        this.Methods = OutlineVertical.Methods;\r\n        this.Elements = OutlineVertical.Elements;\r\n        this.References = OutlineVertical.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    OutlineVertical.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: {\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 3,\r\n                    top: 0\r\n                },\r\n                height: \"100%\",\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n            },\r\n            _b.gridArea = \"c\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OutlineVertical.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OutlineVertical.InstanceIdentificator);\r\n                        object = OutlineVertical.Form.Image.ApplyImage(object);\r\n                        if (OutlineVertical.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OutlineVertical.Form.Image.Text));\r\n                        Object.values(OutlineVertical.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OutlineVertical.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OutlineVertical.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    OutlineVertical.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OutlineVertical;\r\n}());\r\nexport { OutlineVertical };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { WindowForm } from \"../../WindowForm/WindowForm\";\r\nvar FormBox = /** @class */ (function () {\r\n    function FormBox() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = FormBox.Form;\r\n        this.Methods = FormBox.Methods;\r\n        this.Elements = FormBox.Elements;\r\n        this.References = FormBox.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    FormBox.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.gridArea = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    FormBox.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        FormBox.Identificator = global.count.toString();\r\n                        if (FormBox.InstanceIdentificator == null)\r\n                            FormBox.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", FormBox.InstanceIdentificator);\r\n                        object = FormBox.Form.Image.ApplyImage(object);\r\n                        if (FormBox.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(FormBox.Form.Image.Text));\r\n                        Object.values(FormBox.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(FormBox.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    FormBox.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.WindowForm = WindowForm,\r\n        _r);\r\n    FormBox.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return FormBox;\r\n}());\r\nexport { FormBox };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar FormText = /** @class */ (function () {\r\n    function FormText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = FormText.Form;\r\n        this.Methods = FormText.Methods;\r\n        this.Elements = FormText.Elements;\r\n        this.References = FormText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    FormText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    element.style.color = \"white\";\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"Form\",\r\n            _b.gridArea = \"b\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    FormText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        FormText.Identificator = global.count.toString();\r\n                        if (FormText.InstanceIdentificator == null)\r\n                            FormText.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", FormText.InstanceIdentificator);\r\n                        object = FormText.Form.Image.ApplyImage(object);\r\n                        if (FormText.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(FormText.Form.Image.Text));\r\n                        Object.values(FormText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(FormText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    FormText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    FormText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return FormText;\r\n}());\r\nexport { FormText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { InformationHandlers } from \"../../../InformationHandlers/InformationHandlers\";\r\nimport { OtherMethods } from \"../../../OtherMethods/OtherMethods\";\r\nvar ObjectMethodBox = /** @class */ (function () {\r\n    function ObjectMethodBox() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectMethodBox.Form;\r\n        this.Methods = ObjectMethodBox.Methods;\r\n        this.Elements = ObjectMethodBox.Elements;\r\n        this.References = ObjectMethodBox.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    ObjectMethodBox.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.gridArea = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectMethodBox.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        ObjectMethodBox.Identificator = global.count.toString();\r\n                        if (ObjectMethodBox.InstanceIdentificator == null)\r\n                            ObjectMethodBox.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectMethodBox.InstanceIdentificator);\r\n                        object = ObjectMethodBox.Form.Image.ApplyImage(object);\r\n                        if (ObjectMethodBox.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ObjectMethodBox.Form.Image.Text));\r\n                        Object.values(ObjectMethodBox.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectMethodBox.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectMethodBox.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.InformationHandlers = InformationHandlers,\r\n        _r.OtherMethods = OtherMethods,\r\n        _r);\r\n    ObjectMethodBox.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectMethodBox;\r\n}());\r\nexport { ObjectMethodBox };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar ObjectMethodsText = /** @class */ (function () {\r\n    function ObjectMethodsText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectMethodsText.Form;\r\n        this.Methods = ObjectMethodsText.Methods;\r\n        this.Elements = ObjectMethodsText.Elements;\r\n        this.References = ObjectMethodsText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    ObjectMethodsText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    element.style.color = \"white\";\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"Methods\",\r\n            _b.gridArea = \"b\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectMethodsText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        ObjectMethodsText.Identificator = global.count.toString();\r\n                        if (ObjectMethodsText.InstanceIdentificator == null)\r\n                            ObjectMethodsText.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectMethodsText.InstanceIdentificator);\r\n                        object = ObjectMethodsText.Form.Image.ApplyImage(object);\r\n                        if (ObjectMethodsText.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ObjectMethodsText.Form.Image.Text));\r\n                        Object.values(ObjectMethodsText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectMethodsText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectMethodsText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ObjectMethodsText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectMethodsText;\r\n}());\r\nexport { ObjectMethodsText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar OutlineHor = /** @class */ (function () {\r\n    function OutlineHor() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OutlineHor.Form;\r\n        this.Methods = OutlineHor.Methods;\r\n        this.Elements = OutlineHor.Elements;\r\n        this.References = OutlineHor.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    OutlineHor.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: {\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    top: 3\r\n                },\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n            },\r\n            _b.gridArea = \"a\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OutlineHor.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OutlineHor.InstanceIdentificator);\r\n                        object = OutlineHor.Form.Image.ApplyImage(object);\r\n                        if (OutlineHor.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OutlineHor.Form.Image.Text));\r\n                        Object.values(OutlineHor.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OutlineHor.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function () {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function () {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function () {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function () {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function () {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function () {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function () {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function () {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function () {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function () {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OutlineHor.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    OutlineHor.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OutlineHor;\r\n}());\r\nexport { OutlineHor };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { ElementCreator } from \"../../ElementCreator/ElementCreator\";\r\nvar WindowForm = /** @class */ (function () {\r\n    function WindowForm() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = WindowForm.Form;\r\n        this.Methods = WindowForm.Methods;\r\n        this.Elements = WindowForm.Elements;\r\n        this.References = WindowForm.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    WindowForm.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 40\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.gridArea = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    WindowForm.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        WindowForm.Identificator = global.count.toString();\r\n                        if (WindowForm.InstanceIdentificator == null)\r\n                            WindowForm.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", WindowForm.InstanceIdentificator);\r\n                        object = WindowForm.Form.Image.ApplyImage(object);\r\n                        if (WindowForm.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(WindowForm.Form.Image.Text));\r\n                        Object.values(WindowForm.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(WindowForm.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    WindowForm.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.ElementCreator = ElementCreator,\r\n        _r);\r\n    WindowForm.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return WindowForm;\r\n}());\r\nexport { WindowForm };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { ElementImage } from \"../../ElementImage/ElementImage\";\r\nimport { ElementPaddingLeft } from \"../../ElementPaddingLeft/ElementPaddingLeft\";\r\nimport { ElementPaddingTop } from \"../../ElementPaddingTop/ElementPaddingTop\";\r\nvar ElementCreator = /** @class */ (function () {\r\n    function ElementCreator() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ElementCreator.Form;\r\n        this.Methods = ElementCreator.Methods;\r\n        this.Elements = ElementCreator.Elements;\r\n        this.References = ElementCreator.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    ElementCreator.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null) {\r\n                        var gridTemplate = '';\r\n                        Image.gridTemplate.forEach(function (temp, index) { return gridTemplate += '\"' + temp + '\"' + \" \" + Image.gridRowsWidth[index] + \" \"; });\r\n                        gridTemplate += \" / \";\r\n                        Image.gridColumnsWidth.forEach(function (col) { return gridTemplate += col + \" \"; });\r\n                        console.log(gridTemplate);\r\n                        element.style.gridTemplate = gridTemplate;\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    element.style.placeItems = \"center\";\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplate = [\"a b b b c\", \"d e e e f\", \"d g h i f\", \"d j j j f\", \"k l l l m\"],\r\n            _b.gridRowsWidth = [0, \"auto\", \"auto\", \"auto\", \"auto\"],\r\n            _b.gridColumnsWidth = [0, \"auto\", \"auto\", \"auto\", 0],\r\n            _b.gridArea = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ElementCreator.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        ElementCreator.Identificator = global.count.toString();\r\n                        if (ElementCreator.InstanceIdentificator == null)\r\n                            ElementCreator.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ElementCreator.InstanceIdentificator);\r\n                        object = ElementCreator.Form.Image.ApplyImage(object);\r\n                        if (ElementCreator.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ElementCreator.Form.Image.Text));\r\n                        Object.values(ElementCreator.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ElementCreator.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ElementCreator.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.ElementPaddingTop = ElementPaddingTop,\r\n        _r.ElementPaddingLeft = ElementPaddingLeft,\r\n        _r.ElementImage = ElementImage,\r\n        _r);\r\n    ElementCreator.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ElementCreator;\r\n}());\r\nexport { ElementCreator };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { InformationHandlersText } from \"../../InformationHandlersText/InformationHandlersText\";\r\nimport { ObjectReferenceHandlersNode } from \"../../ObjectReferenceHandlersNode/ObjectReferenceHandlersNode\";\r\nimport { OutlineVertical } from \"../Compounds/Compounds/Compounds/OutlineVertical/OutlineVertical\";\r\nvar InformationHandlers = /** @class */ (function () {\r\n    function InformationHandlers() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = InformationHandlers.Form;\r\n        this.Methods = InformationHandlers.Methods;\r\n        this.Elements = InformationHandlers.Elements;\r\n        this.References = InformationHandlers.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    InformationHandlers.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 2,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplate = '\"b b\" fit-content(1px) \"c d\" 1fr / 30px 1fr',\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    InformationHandlers.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        InformationHandlers.Identificator = global.count.toString();\r\n                        if (InformationHandlers.InstanceIdentificator == null)\r\n                            InformationHandlers.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", InformationHandlers.InstanceIdentificator);\r\n                        object = InformationHandlers.Form.Image.ApplyImage(object);\r\n                        if (InformationHandlers.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(InformationHandlers.Form.Image.Text));\r\n                        Object.values(InformationHandlers.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(InformationHandlers.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    InformationHandlers.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.InformationHandlersText = InformationHandlersText,\r\n        _r.ObjectReferenceHandlers = ObjectReferenceHandlersNode,\r\n        _r.OutlineVertical = OutlineVertical,\r\n        _r);\r\n    InformationHandlers.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return InformationHandlers;\r\n}());\r\nexport { InformationHandlers };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { SpaceMethods } from \"../../SpaceMethods/SpaceMethods\";\r\nvar OtherMethods = /** @class */ (function () {\r\n    function OtherMethods() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OtherMethods.Form;\r\n        this.Methods = OtherMethods.Methods;\r\n        this.Elements = OtherMethods.Elements;\r\n        this.References = OtherMethods.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    OtherMethods.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 2,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\",\r\n            },\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OtherMethods.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        OtherMethods.Identificator = global.count.toString();\r\n                        if (OtherMethods.InstanceIdentificator == null)\r\n                            OtherMethods.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OtherMethods.InstanceIdentificator);\r\n                        object = OtherMethods.Form.Image.ApplyImage(object);\r\n                        if (OtherMethods.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OtherMethods.Form.Image.Text));\r\n                        Object.values(OtherMethods.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OtherMethods.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OtherMethods.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.SpaceMethods = SpaceMethods,\r\n        _r);\r\n    OtherMethods.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OtherMethods;\r\n}());\r\nexport { OtherMethods };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar ElementImage = /** @class */ (function () {\r\n    function ElementImage() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ElementImage.Form;\r\n        this.Methods = ElementImage.Methods;\r\n        this.Elements = ElementImage.Elements;\r\n        this.References = ElementImage.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    ElementImage.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 1,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\",\r\n                borderRadius: 10,\r\n                width: \"100%\",\r\n                height: 50\r\n            },\r\n            _b.gridArea /* = [1,1] */ = \"e\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ElementImage.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ElementImage.InstanceIdentificator);\r\n                        object = ElementImage.Form.Image.ApplyImage(object);\r\n                        if (ElementImage.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ElementImage.Form.Image.Text));\r\n                        Object.values(ElementImage.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ElementImage.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ElementImage.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ElementImage.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ElementImage;\r\n}());\r\nexport { ElementImage };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Document } from \"../Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Document/Document\";\r\nvar ElementPaddingLeft = /** @class */ (function () {\r\n    function ElementPaddingLeft() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ElementPaddingLeft.Form;\r\n        this.Methods = ElementPaddingLeft.Methods;\r\n        this.Elements = ElementPaddingLeft.Elements;\r\n        this.References = ElementPaddingLeft.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\r\n    ElementPaddingLeft.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _c, _d, _e, _g, _j, _l, _o, _q, _s, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_c = Image.Border.Margin) === null || _c === void 0 ? void 0 : _c.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.width) + \"px\"));\r\n                    if (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.minWidth) + \"px\"));\r\n                    if (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.maxWidth) + \"px\"));\r\n                    if (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.height) + \"px\"));\r\n                    if (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.minHeight) + \"px\"));\r\n                    if (((_w = Image.Border) === null || _w === void 0 ? void 0 : _w.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.maxHeight) + \"px\"));\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.boxSizing) != null)\r\n                        element.style.boxSizing = Image.Border.boxSizing;\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderWidth) != null) {\r\n                        if (((_0 = Image.Border.borderWidth) === null || _0 === void 0 ? void 0 : _0.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_2 = Image.Border) === null || _2 === void 0 ? void 0 : _2.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_3 = Image.Border) === null || _3 === void 0 ? void 0 : _3.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_4 = Image.Border) === null || _4 === void 0 ? void 0 : _4.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_5 = Image.Border) === null || _5 === void 0 ? void 0 : _5.padding) != null) {\r\n                        if (((_6 = Image.Border.padding) === null || _6 === void 0 ? void 0 : _6.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null) {\r\n                        var gridTemplate = '';\r\n                        Image.gridTemplate.forEach(function (temp, index) { return gridTemplate += '\"' + temp + '\"' + \" \" + (typeof Image.gridRowsWidth[index] == \"number\" ? Image.gridRowsWidth[index] + \"px\" : Image.gridRowsWidth[index]) + \" \"; });\r\n                        gridTemplate += \" / \";\r\n                        Image.gridColumnsWidth.forEach(function (col) { return gridTemplate += col + \" \"; });\r\n                        console.log(gridTemplate);\r\n                        element.style.gridTemplate = gridTemplate;\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.alignSelf = Image.Positioning.column;\r\n                        element.style.justifySelf = Image.Positioning.row;\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                boxSizing: \"border-box\",\r\n                height: \"50%\",\r\n                width: 40,\r\n                borderWidth: {\r\n                    left: 2,\r\n                    right: 2,\r\n                    bottom: 0,\r\n                    top: 0\r\n                },\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\"\r\n            },\r\n            _b.Positioning = {\r\n                row: \"start\",\r\n                column: \"center\"\r\n            },\r\n            _b.position = \"relative\",\r\n            _b.positionOffset = {\r\n                left: -_b.Border.width,\r\n                top: 0\r\n            },\r\n            _b.gridArea /* = [1,1] */ = \"e\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ElementPaddingLeft.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        if (ElementPaddingLeft.InstanceIdentificator == null)\r\n                            ElementPaddingLeft.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ElementPaddingLeft.InstanceIdentificator);\r\n                        object = ElementPaddingLeft.Form.Image.ApplyImage(object);\r\n                        if (ElementPaddingLeft.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ElementPaddingLeft.Form.Image.Text));\r\n                        Object.values(ElementPaddingLeft.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _c;\r\n                            return __generator(this, function (_d) {\r\n                                switch (_d.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _c = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _c.apply(_a, [_d.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    if (InformationHandler.isListener == false) {\r\n                        console.log(\"ExtensionLackListeners\", ElementPaddingLeft.Identificator);\r\n                        document.querySelectorAll('[instanceidentificator=\"' + ElementPaddingLeft.InstanceIdentificator + '\"]')\r\n                            .forEach(function (element) { return element.addEventListener(\"Outline\", function (event) { InformationHandler.Initialize(event.detail); }); });\r\n                        InformationHandler.isListener = true;\r\n                    }\r\n                    Object.values(ElementPaddingLeft.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                        }\r\n                    ],\r\n                    _k),\r\n                _e.Move = (_m = /** @class */ (function () {\r\n                        function Move() {\r\n                        }\r\n                        return Move;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            var _a;\r\n                            Identificator = global.objectMovement;\r\n                            if ((global === null || global === void 0 ? void 0 : global.Coordinates) != null) {\r\n                                var imageObject = document.querySelector('[identificator=\"' + Identificator + '\"]').parentElement;\r\n                                var object_1 = global.search.FindObjectByIdentificator(imageObject.getAttribute(\"identificator\"), Document);\r\n                                object_1.Form.Image.gridColumnsWidth[0] += -(global.Coordinates.x - Properties.Coordinates.x) /*  * (0.01 * Math.abs(global.Coordinates.x - Properties.Coordinates.x)) */;\r\n                                if (((_a = object_1.Form.Image) === null || _a === void 0 ? void 0 : _a.gridTemplate) != null) {\r\n                                    var gridTemplate = '';\r\n                                    object_1.Form.Image.gridTemplate.forEach(function (temp, index) { return gridTemplate += '\"' + temp + '\"' + \" \" + (typeof object_1.Form.Image.gridRowsWidth[index] == \"number\" ? object_1.Form.Image.gridRowsWidth[index] + \"px\" : object_1.Form.Image.gridRowsWidth[index]) + \" \"; });\r\n                                    gridTemplate += \" / \";\r\n                                    object_1.Form.Image.gridColumnsWidth.forEach(function (col) { return gridTemplate += (typeof col == \"string\" ? col : col + \"px\") + \" \"; });\r\n                                    imageObject.style.gridTemplate = gridTemplate;\r\n                                }\r\n                            }\r\n                            global.Coordinates = Properties.Coordinates;\r\n                        }\r\n                    ],\r\n                    _m),\r\n                _e.LeftClick = (_p = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e.LeftClickHoldingDown = (_r = /** @class */ (function () {\r\n                        function LeftClickHoldingDown() {\r\n                        }\r\n                        return LeftClickHoldingDown;\r\n                    }()),\r\n                    _r.CurrentMethod = (_s = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _r.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _s.MethodIndex = 0,\r\n                        _s.Response = true,\r\n                        _s),\r\n                    _r.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"LeftClickHolding Down\");\r\n                            global.objectMovement = Identificator;\r\n                            global.Doc.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Set(1);\r\n                        }\r\n                    ],\r\n                    _r),\r\n                _e.LeftClickHoldingUp = (_t = /** @class */ (function () {\r\n                        function LeftClickHoldingUp() {\r\n                        }\r\n                        return LeftClickHoldingUp;\r\n                    }()),\r\n                    _t.CurrentMethod = (_u = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _t.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _u.MethodIndex = 0,\r\n                        _u.Response = true,\r\n                        _u),\r\n                    _t.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"LeftClickHolding Up\");\r\n                            ElementPaddingLeft.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Response = false;\r\n                            global.Coordinates = null;\r\n                        }\r\n                    ],\r\n                    _t),\r\n                _e),\r\n            //#region Hidden\r\n            _d.isListener = false,\r\n            _d),\r\n        _c);\r\n    ElementPaddingLeft.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ElementPaddingLeft.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ElementPaddingLeft;\r\n}());\r\nexport { ElementPaddingLeft };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Document } from \"../Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Document/Document\";\r\nvar ElementPaddingTop = /** @class */ (function () {\r\n    function ElementPaddingTop() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ElementPaddingTop.Form;\r\n        this.Methods = ElementPaddingTop.Methods;\r\n        this.Elements = ElementPaddingTop.Elements;\r\n        this.References = ElementPaddingTop.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\r\n    ElementPaddingTop.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _c, _d, _e, _g, _j, _l, _o, _q, _s, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_c = Image.Border.Margin) === null || _c === void 0 ? void 0 : _c.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.width) + \"px\"));\r\n                    if (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.minWidth) + \"px\"));\r\n                    if (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.maxWidth) + \"px\"));\r\n                    if (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.height) + \"px\"));\r\n                    if (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.minHeight) + \"px\"));\r\n                    if (((_w = Image.Border) === null || _w === void 0 ? void 0 : _w.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.maxHeight) + \"px\"));\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.boxSizing) != null)\r\n                        element.style.boxSizing = Image.Border.boxSizing;\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderWidth) != null) {\r\n                        if (((_0 = Image.Border.borderWidth) === null || _0 === void 0 ? void 0 : _0.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_2 = Image.Border) === null || _2 === void 0 ? void 0 : _2.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_3 = Image.Border) === null || _3 === void 0 ? void 0 : _3.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_4 = Image.Border) === null || _4 === void 0 ? void 0 : _4.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_5 = Image.Border) === null || _5 === void 0 ? void 0 : _5.padding) != null) {\r\n                        if (((_6 = Image.Border.padding) === null || _6 === void 0 ? void 0 : _6.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null) {\r\n                        var gridTemplate = '';\r\n                        Image.gridTemplate.forEach(function (temp, index) { return gridTemplate += '\"' + temp + '\"' + \" \" + (typeof Image.gridRowsWidth[index] == \"number\" ? Image.gridRowsWidth[index] + \"px\" : Image.gridRowsWidth[index]) + \" \"; });\r\n                        gridTemplate += \" / \";\r\n                        Image.gridColumnsWidth.forEach(function (col) { return gridTemplate += col + \" \"; });\r\n                        console.log(gridTemplate);\r\n                        element.style.gridTemplate = gridTemplate;\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.alignSelf = Image.Positioning.column;\r\n                        element.style.justifySelf = Image.Positioning.row;\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                boxSizing: \"border-box\",\r\n                height: 40,\r\n                borderWidth: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 2,\r\n                    top: 2\r\n                },\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\",\r\n                width: \"10%\"\r\n            },\r\n            _b.Positioning = {\r\n                row: \"center\",\r\n                column: \"start\"\r\n            },\r\n            _b.position = \"relative\",\r\n            _b.positionOffset = {\r\n                left: 0,\r\n                top: -_b.Border.height\r\n            },\r\n            _b.gridArea /* = [1,1] */ = \"e\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ElementPaddingTop.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        if (ElementPaddingTop.InstanceIdentificator == null)\r\n                            ElementPaddingTop.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ElementPaddingTop.InstanceIdentificator);\r\n                        object = ElementPaddingTop.Form.Image.ApplyImage(object);\r\n                        if (ElementPaddingTop.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ElementPaddingTop.Form.Image.Text));\r\n                        Object.values(ElementPaddingTop.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _c;\r\n                            return __generator(this, function (_d) {\r\n                                switch (_d.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _c = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _c.apply(_a, [_d.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    if (InformationHandler.isListener == false) {\r\n                        console.log(\"ExtensionLackListeners\", ElementPaddingTop.Identificator);\r\n                        document.querySelectorAll('[instanceidentificator=\"' + ElementPaddingTop.InstanceIdentificator + '\"]')\r\n                            .forEach(function (element) { return element.addEventListener(\"Outline\", function (event) { InformationHandler.Initialize(event.detail); }); });\r\n                        InformationHandler.isListener = true;\r\n                    }\r\n                    Object.values(ElementPaddingTop.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                        }\r\n                    ],\r\n                    _k),\r\n                _e.Move = (_m = /** @class */ (function () {\r\n                        function Move() {\r\n                        }\r\n                        return Move;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            var _a;\r\n                            Identificator = global.objectMovement;\r\n                            if ((global === null || global === void 0 ? void 0 : global.Coordinates) != null) {\r\n                                var imageObject = document.querySelector('[identificator=\"' + Identificator + '\"]').parentElement;\r\n                                var object_1 = global.search.FindObjectByIdentificator(imageObject.getAttribute(\"identificator\"), Document);\r\n                                object_1.Form.Image.gridRowsWidth[0] += -(global.Coordinates.y - Properties.Coordinates.y) /*  * (0.01 * Math.abs(global.Coordinates.x - Properties.Coordinates.x)) */;\r\n                                if (((_a = object_1.Form.Image) === null || _a === void 0 ? void 0 : _a.gridTemplate) != null) {\r\n                                    var gridTemplate = '';\r\n                                    object_1.Form.Image.gridTemplate.forEach(function (temp, index) { return gridTemplate += '\"' + temp + '\"' + \" \" + (typeof object_1.Form.Image.gridRowsWidth[index] == \"number\" ? object_1.Form.Image.gridRowsWidth[index] + \"px\" : object_1.Form.Image.gridRowsWidth[index]) + \" \"; });\r\n                                    gridTemplate += \" / \";\r\n                                    object_1.Form.Image.gridColumnsWidth.forEach(function (col) { return gridTemplate += (typeof col == \"string\" ? col : col + \"px\") + \" \"; });\r\n                                    imageObject.style.gridTemplate = gridTemplate;\r\n                                }\r\n                            }\r\n                            global.Coordinates = Properties.Coordinates;\r\n                        }\r\n                    ],\r\n                    _m),\r\n                _e.LeftClick = (_p = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e.LeftClickHoldingDown = (_r = /** @class */ (function () {\r\n                        function LeftClickHoldingDown() {\r\n                        }\r\n                        return LeftClickHoldingDown;\r\n                    }()),\r\n                    _r.CurrentMethod = (_s = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _r.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _s.MethodIndex = 0,\r\n                        _s.Response = true,\r\n                        _s),\r\n                    _r.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"LeftClickHolding Down\");\r\n                            global.objectMovement = Identificator;\r\n                            global.Doc.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Set(1);\r\n                        }\r\n                    ],\r\n                    _r),\r\n                _e.LeftClickHoldingUp = (_t = /** @class */ (function () {\r\n                        function LeftClickHoldingUp() {\r\n                        }\r\n                        return LeftClickHoldingUp;\r\n                    }()),\r\n                    _t.CurrentMethod = (_u = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _t.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _u.MethodIndex = 0,\r\n                        _u.Response = true,\r\n                        _u),\r\n                    _t.OtherMethods = [\r\n                        function (Identificator, Properties) {\r\n                            console.log(\"LeftClickHolding Up\");\r\n                            ElementPaddingTop.Methods.InformationHandler.MouseHandler.Move.CurrentMethod.Response = false;\r\n                            global.Coordinates = null;\r\n                        }\r\n                    ],\r\n                    _t),\r\n                _e),\r\n            //#region Hidden\r\n            _d.isListener = false,\r\n            _d),\r\n        _c);\r\n    ElementPaddingTop.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ElementPaddingTop.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ElementPaddingTop;\r\n}());\r\nexport { ElementPaddingTop };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar InformationHandlersText = /** @class */ (function () {\r\n    function InformationHandlersText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = InformationHandlersText.Form;\r\n        this.Methods = InformationHandlersText.Methods;\r\n        this.Elements = InformationHandlersText.Elements;\r\n        this.References = InformationHandlersText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    InformationHandlersText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"Information Handlers\",\r\n            _b.gridArea /* = [1,1] */ = \"b\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    InformationHandlersText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        InformationHandlersText.Identificator = global.count.toString();\r\n                        if (InformationHandlersText.InstanceIdentificator == null)\r\n                            InformationHandlersText.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", InformationHandlersText.InstanceIdentificator);\r\n                        object = InformationHandlersText.Form.Image.ApplyImage(object);\r\n                        if (InformationHandlersText.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(InformationHandlersText.Form.Image.Text));\r\n                        Object.values(InformationHandlersText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(InformationHandlersText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex]();\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    InformationHandlersText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    InformationHandlersText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return InformationHandlersText;\r\n}());\r\nexport { InformationHandlersText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar Method = /** @class */ (function () {\r\n    function Method() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = Method.Form;\r\n        this.Methods = Method.Methods;\r\n        this.Elements = Method.Elements;\r\n        this.References = Method.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    Method.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                ;\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null)\r\n                        element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"Method!\",\r\n            _b.Border = {\r\n                borderWidth: 1,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\",\r\n                borderRadius: 10,\r\n                backgroundColor: \"#0b0c0d\",\r\n                Margin: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 10,\r\n                    top: 0,\r\n                },\r\n                padding: 10\r\n            },\r\n            _b.gridTemplateColumns = \"20% 80%\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    Method.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", Method.InstanceIdentificator);\r\n                        object = Method.Form.Image.ApplyImage(object);\r\n                        if (Method.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(Method.Form.Image.Text));\r\n                        Object.values(Method.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(Method.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    Method.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    Method.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return Method;\r\n}());\r\nexport { Method };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { InformationNode } from \"../../InformationNode/InformationNode\";\r\nimport { ObjectReferenceHandlerText } from \"../../ObjectReferenceHandlerText/ObjectReferenceHandlerText\";\r\nimport { OutlineHor } from \"../../OutlineHor/OutlineHor\";\r\nimport { OutlineVertical } from \"../Compounds/Compounds/Compounds/Compounds/OutlineVertical/OutlineVertical\";\r\nvar ObjectReferenceHandlersNode = /** @class */ (function () {\r\n    function ObjectReferenceHandlersNode() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectReferenceHandlersNode.Form;\r\n        this.Methods = ObjectReferenceHandlersNode.Methods;\r\n        this.Elements = ObjectReferenceHandlersNode.Elements;\r\n        this.References = ObjectReferenceHandlersNode.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    ObjectReferenceHandlersNode.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplate = '\"a b b\" fit-content(1px) \"q c d\" 1fr /  30px 30px 1fr',\r\n            _b.gridArea /* = [1,1] */ = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectReferenceHandlersNode.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectReferenceHandlersNode.InstanceIdentificator);\r\n                        object = ObjectReferenceHandlersNode.Form.Image.ApplyImage(object);\r\n                        if (ObjectReferenceHandlersNode.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(ObjectReferenceHandlersNode.Form.Image.Text));\r\n                        Object.values(ObjectReferenceHandlersNode.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectReferenceHandlersNode.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectReferenceHandlersNode.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.OutlineHor = OutlineHor,\r\n        _r.OutlineVertical = OutlineVertical,\r\n        _r.ObjectReferenceHandlerText = ObjectReferenceHandlerText,\r\n        _r.InformationNode = InformationNode,\r\n        _r);\r\n    ObjectReferenceHandlersNode.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectReferenceHandlersNode;\r\n}());\r\nexport { ObjectReferenceHandlersNode };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AddAnimationMethod } from \"../../AddAnimationMethod/AddAnimationMethod\";\r\nimport { AdddMethod as AdddMethod } from \"../../AddMethod/AddMethod\";\r\nvar SpaceMethods = /** @class */ (function () {\r\n    function SpaceMethods() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = SpaceMethods.Form;\r\n        this.Methods = SpaceMethods.Methods;\r\n        this.Elements = SpaceMethods.Elements;\r\n        this.References = SpaceMethods.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    SpaceMethods.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 1,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 40%)\",\r\n                borderRadius: 10,\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplateColumns = \"20% 80%\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    SpaceMethods.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        console.log(\"SpaceMethods Create\", global.count);\r\n                        SpaceMethods.Identificator = global.count.toString();\r\n                        if (SpaceMethods.InstanceIdentificator == null)\r\n                            SpaceMethods.InstanceIdentificator = count.toString();\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", SpaceMethods.InstanceIdentificator);\r\n                        object = SpaceMethods.Form.Image.ApplyImage(object);\r\n                        if (SpaceMethods.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(SpaceMethods.Form.Image.Text));\r\n                        Object.values(SpaceMethods.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    console.log(\"SpaceMethods, \", SpaceMethods.Identificator);\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(SpaceMethods.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    SpaceMethods.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.AdddMethod = AdddMethod,\r\n        _r.AddAnimationMethod = AddAnimationMethod,\r\n        _r);\r\n    SpaceMethods.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return SpaceMethods;\r\n}());\r\nexport { SpaceMethods };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { InformationBox } from \"../../InformationBox/InformationBox\";\r\nimport { InformationBoxText } from \"../../InformationBoxText/InformationBoxText\";\r\nimport { OutlineHor } from \"../Compounds/Compounds/Compounds/Compounds/OutlineHor/OutlineHor\";\r\nvar InformationNode = /** @class */ (function () {\r\n    function InformationNode() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = InformationNode.Form;\r\n        this.Methods = InformationNode.Methods;\r\n        this.Elements = InformationNode.Elements;\r\n        this.References = InformationNode.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    InformationNode.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Display = \"grid\",\r\n            _b.gridTemplate = '\"a b\" fit-content(1px) \"c d\" 1fr / 30px 1fr',\r\n            _b.gridArea /* = [1,1] */ = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    InformationNode.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", InformationNode.InstanceIdentificator);\r\n                        object = InformationNode.Form.Image.ApplyImage(object);\r\n                        if (InformationNode.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(InformationNode.Form.Image.Text));\r\n                        Object.values(InformationNode.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(InformationNode.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    InformationNode.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.InformationBox = InformationBox,\r\n        _r.InformationBoxText = InformationBoxText,\r\n        _r.OutlineHor = OutlineHor,\r\n        _r);\r\n    InformationNode.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return InformationNode;\r\n}());\r\nexport { InformationNode };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar ObjectReferenceHandlerText = /** @class */ (function () {\r\n    function ObjectReferenceHandlerText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = ObjectReferenceHandlerText.Form;\r\n        this.Methods = ObjectReferenceHandlerText.Methods;\r\n        this.Elements = ObjectReferenceHandlerText.Elements;\r\n        this.References = ObjectReferenceHandlerText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    ObjectReferenceHandlerText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == typeof String ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == typeof String ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == typeof String ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == typeof String ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == typeof String ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"ObjectReferenceHandler\",\r\n            _b.gridArea /* = [1,1] */ = \"b\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    ObjectReferenceHandlerText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                var _a;\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_b) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", ObjectReferenceHandlerText.InstanceIdentificator);\r\n                        object = ObjectReferenceHandlerText.Form.Image.ApplyImage(object);\r\n                        if (((_a = ObjectReferenceHandlerText.Form.Image) === null || _a === void 0 ? void 0 : _a.Text) != null)\r\n                            object.appendChild(document.createTextNode(ObjectReferenceHandlerText.Form.Image.Text));\r\n                        Object.values(ObjectReferenceHandlerText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(ObjectReferenceHandlerText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    ObjectReferenceHandlerText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    ObjectReferenceHandlerText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return ObjectReferenceHandlerText;\r\n}());\r\nexport { ObjectReferenceHandlerText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar OutlineHor = /** @class */ (function () {\r\n    function OutlineHor() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OutlineHor.Form;\r\n        this.Methods = OutlineHor.Methods;\r\n        this.Elements = OutlineHor.Elements;\r\n        this.References = OutlineHor.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    OutlineHor.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == typeof String ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: {\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    top: 3\r\n                },\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n            },\r\n            _b.gridArea = \"a\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OutlineHor.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OutlineHor.InstanceIdentificator);\r\n                        object = OutlineHor.Form.Image.ApplyImage(object);\r\n                        if (OutlineHor.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OutlineHor.Form.Image.Text));\r\n                        Object.values(OutlineHor.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OutlineHor.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OutlineHor.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    OutlineHor.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OutlineHor;\r\n}());\r\nexport { OutlineHor };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar InformationBoxText = /** @class */ (function () {\r\n    function InformationBoxText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = InformationBoxText.Form;\r\n        this.Methods = InformationBoxText.Methods;\r\n        this.Elements = InformationBoxText.Elements;\r\n        this.References = InformationBoxText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    InformationBoxText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"InformationBoxText\",\r\n            _b.gridArea /* = [1,1] */ = \"b\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    InformationBoxText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                var _a;\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_b) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", InformationBoxText.InstanceIdentificator);\r\n                        object = InformationBoxText.Form.Image.ApplyImage(object);\r\n                        if (((_a = InformationBoxText.Form.Image) === null || _a === void 0 ? void 0 : _a.Text) != null)\r\n                            object.appendChild(document.createTextNode(InformationBoxText.Form.Image.Text));\r\n                        Object.values(InformationBoxText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                    InformationHandler.MouseHandler.Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(InformationBoxText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    InformationBoxText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    InformationBoxText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return InformationBoxText;\r\n}());\r\nexport { InformationBoxText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { CurrentMethod } from \"../../CurrentMethod/CurrentMethod\";\r\nimport { CurrentMethodText } from \"../../CurrentMethodText/CurrentMethodText\";\r\nimport { OtherMethods } from \"../../OtherMethods/OtherMethods\";\r\nimport { OtherMethodsText } from \"../../OtherMethodsText/OtherMethodsText\";\r\nvar InformationBox = /** @class */ (function () {\r\n    function InformationBox() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = InformationBox.Form;\r\n        this.Methods = InformationBox.Methods;\r\n        this.Elements = InformationBox.Elements;\r\n        this.References = InformationBox.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    InformationBox.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 2,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b.gridArea /* = [1,1] */ = \"d\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    InformationBox.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", InformationBox.InstanceIdentificator);\r\n                        object = InformationBox.Form.Image.ApplyImage(object);\r\n                        if (InformationBox.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(InformationBox.Form.Image.Text));\r\n                        Object.values(InformationBox.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(InformationBox.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    InformationBox.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.CurrentMethodText = CurrentMethodText,\r\n        _r.CurrentMethod = CurrentMethod,\r\n        _r.OtherMethodsText = OtherMethodsText,\r\n        _r.OtherMethods = OtherMethods,\r\n        _r);\r\n    InformationBox.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return InformationBox;\r\n}());\r\nexport { InformationBox };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar CurrentMethodText = /** @class */ (function () {\r\n    function CurrentMethodText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = CurrentMethodText.Form;\r\n        this.Methods = CurrentMethodText.Methods;\r\n        this.Elements = CurrentMethodText.Elements;\r\n        this.References = CurrentMethodText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    CurrentMethodText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"CurrentMethod\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    CurrentMethodText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", CurrentMethodText.InstanceIdentificator);\r\n                        object = CurrentMethodText.Form.Image.ApplyImage(object);\r\n                        if (CurrentMethodText.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(CurrentMethodText.Form.Image.Text));\r\n                        Object.values(CurrentMethodText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(CurrentMethodText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    CurrentMethodText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    CurrentMethodText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return CurrentMethodText;\r\n}());\r\nexport { CurrentMethodText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { SpaceMethods } from \"../Compounds/Compounds/Compounds/SpaceMethods/SpaceMethods\";\r\nvar CurrentMethod = /** @class */ (function () {\r\n    function CurrentMethod() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = CurrentMethod.Form;\r\n        this.Methods = CurrentMethod.Methods;\r\n        this.Elements = CurrentMethod.Elements;\r\n        this.References = CurrentMethod.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    CurrentMethod.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                padding: {\r\n                    left: 15,\r\n                    right: 10,\r\n                    bottom: 15,\r\n                    top: 10\r\n                },\r\n                backgroundColor: \"#0b0c0d\"\r\n            },\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    CurrentMethod.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", CurrentMethod.InstanceIdentificator);\r\n                        object = CurrentMethod.Form.Image.ApplyImage(object);\r\n                        if (CurrentMethod.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(CurrentMethod.Form.Image.Text));\r\n                        Object.values(CurrentMethod.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    console.log(\"CurrentMethod\");\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(CurrentMethod.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    CurrentMethod.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.SpaceMethods = SpaceMethods,\r\n        _r);\r\n    CurrentMethod.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return CurrentMethod;\r\n}());\r\nexport { CurrentMethod };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar OtherMethodsText = /** @class */ (function () {\r\n    function OtherMethodsText() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OtherMethodsText.Form;\r\n        this.Methods = OtherMethodsText.Methods;\r\n        this.Elements = OtherMethodsText.Elements;\r\n        this.References = OtherMethodsText.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\r\n    OtherMethodsText.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Text = \"OtherMethods\",\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OtherMethodsText.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OtherMethodsText.InstanceIdentificator);\r\n                        object = OtherMethodsText.Form.Image.ApplyImage(object);\r\n                        if (OtherMethodsText.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OtherMethodsText.Form.Image.Text));\r\n                        Object.values(OtherMethodsText.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OtherMethodsText.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OtherMethodsText.Elements = /** @class */ (function () {\r\n        function Elements() {\r\n        }\r\n        return Elements;\r\n    }());\r\n    OtherMethodsText.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OtherMethodsText;\r\n}());\r\nexport { OtherMethodsText };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { SpaceMethods } from \"../Compounds/Compounds/Compounds/SpaceMethods/SpaceMethods\";\r\nvar OtherMethods = /** @class */ (function () {\r\n    function OtherMethods() {\r\n        //#region Hidden\r\n        //#region ExtensionInterfaceLackInstanceReferenceOnStatic\r\n        this.Image = OtherMethods.Form;\r\n        this.Methods = OtherMethods.Methods;\r\n        this.Elements = OtherMethods.Elements;\r\n        this.References = OtherMethods.References;\r\n        //#endregion\r\n        //#endregion Hidden\r\n    }\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n    OtherMethods.Form = (_a = /** @class */ (function () {\r\n            function Form() {\r\n            }\r\n            return Form;\r\n        }()),\r\n        _a.Image = (_b = /** @class */ (function () {\r\n                function Image() {\r\n                }\r\n                //#region Hidden\r\n                Image.ApplyImage = function (element) {\r\n                    var _a, _b, _c, _d, _e, _g, _j, _l, _o, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\r\n                    if (((_a = Image.Border) === null || _a === void 0 ? void 0 : _a.Margin) != null) {\r\n                        if (((_b = Image.Border.Margin) === null || _b === void 0 ? void 0 : _b.left) != null) {\r\n                            var margin = Image.Border.Margin;\r\n                            element.style.marginLeft = margin.left + \"px\";\r\n                            element.style.marginRight = margin.right + \"px\";\r\n                            element.style.marginBottom = margin.bottom + \"px\";\r\n                            element.style.marginTop = margin.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.margin = Image.Border.Margin + \"px\";\r\n                    }\r\n                    if (((_c = Image.Border) === null || _c === void 0 ? void 0 : _c.width) != null)\r\n                        element.style.width = (typeof Image.Border.width == \"string\" ? Image.Border.width : (((_d = Image.Border) === null || _d === void 0 ? void 0 : _d.width) + \"px\"));\r\n                    if (((_e = Image.Border) === null || _e === void 0 ? void 0 : _e.minWidth) != null)\r\n                        element.style.minWidth = (typeof Image.Border.minWidth == \"string\" ? Image.Border.minWidth : (((_g = Image.Border) === null || _g === void 0 ? void 0 : _g.minWidth) + \"px\"));\r\n                    if (((_j = Image.Border) === null || _j === void 0 ? void 0 : _j.maxWidth) != null)\r\n                        element.style.maxWidth = (typeof Image.Border.maxWidth == \"string\" ? Image.Border.maxWidth : (((_l = Image.Border) === null || _l === void 0 ? void 0 : _l.maxWidth) + \"px\"));\r\n                    if (((_o = Image.Border) === null || _o === void 0 ? void 0 : _o.height) != null)\r\n                        element.style.height = (typeof Image.Border.height == \"string\" ? Image.Border.height : (((_q = Image.Border) === null || _q === void 0 ? void 0 : _q.height) + \"px\"));\r\n                    if (((_r = Image.Border) === null || _r === void 0 ? void 0 : _r.minHeight) != null)\r\n                        element.style.minHeight = (typeof Image.Border.minHeight == \"string\" ? Image.Border.minHeight : (((_s = Image.Border) === null || _s === void 0 ? void 0 : _s.minHeight) + \"px\"));\r\n                    if (((_t = Image.Border) === null || _t === void 0 ? void 0 : _t.maxHeight) != null)\r\n                        element.style.maxHeight = (typeof Image.Border.maxHeight == \"string\" ? Image.Border.maxHeight : (((_u = Image.Border) === null || _u === void 0 ? void 0 : _u.maxHeight) + \"px\"));\r\n                    if (((_v = Image.Border) === null || _v === void 0 ? void 0 : _v.borderWidth) != null) {\r\n                        if (((_w = Image.Border.borderWidth) === null || _w === void 0 ? void 0 : _w.left) != null) {\r\n                            var borderWidth = Image.Border.borderWidth;\r\n                            element.style.borderLeftWidth = borderWidth.left + \"px\";\r\n                            element.style.borderRightWidth = borderWidth.right + \"px\";\r\n                            element.style.borderBottomWidth = borderWidth.bottom + \"px\";\r\n                            element.style.borderTopWidth = borderWidth.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.borderWidth = Image.Border.borderWidth + \"px\";\r\n                    }\r\n                    if (((_x = Image.Border) === null || _x === void 0 ? void 0 : _x.borderType) != null)\r\n                        element.style.borderStyle = Image.Border.borderType;\r\n                    if (((_y = Image.Border) === null || _y === void 0 ? void 0 : _y.borderRadius) != null)\r\n                        element.style.borderRadius = Image.Border.borderRadius + \"px\";\r\n                    if (((_z = Image.Border) === null || _z === void 0 ? void 0 : _z.borderColor) != null)\r\n                        element.style.borderColor = Image.Border.borderColor;\r\n                    if (((_0 = Image.Border) === null || _0 === void 0 ? void 0 : _0.backgroundColor) != null)\r\n                        element.style.backgroundColor = Image.Border.backgroundColor;\r\n                    if (((_1 = Image.Border) === null || _1 === void 0 ? void 0 : _1.padding) != null) {\r\n                        if (((_2 = Image.Border.padding) === null || _2 === void 0 ? void 0 : _2.left) != null) {\r\n                            var padding = Image.Border.padding;\r\n                            element.style.paddingLeft = padding.left + \"px\";\r\n                            element.style.paddingRight = padding.right + \"px\";\r\n                            element.style.paddingBottom = padding.bottom + \"px\";\r\n                            element.style.paddingTop = padding.top + \"px\";\r\n                        }\r\n                        else\r\n                            element.style.padding = Image.Border.padding + \"px\";\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Display) != null)\r\n                        element.style.display = Image.Display;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplateColumns) != null)\r\n                        element.style.gridTemplateColumns = Image.gridTemplateColumns;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridTemplate) != null)\r\n                        element.style.gridTemplate = Image.gridTemplate;\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.gridArea) != null) {\r\n                        if (typeof Image.gridArea == \"string\") {\r\n                            var st = Image.gridArea;\r\n                            element.style.gridArea = st + \"/\" + st + \"/\" + st + \"/\" + st;\r\n                        }\r\n                        else\r\n                            element.style.gridArea = Image.gridArea[0] + \"/\" + Image.gridArea[1];\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.position) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    if ((Image === null || Image === void 0 ? void 0 : Image.Positioning) != null) {\r\n                        element.style.position = Image.position;\r\n                        if ((Image === null || Image === void 0 ? void 0 : Image.positionOffset) != null) {\r\n                            element.style.left = (typeof Image.positionOffset.left == \"string\" ? Image.positionOffset.left : (Image.positionOffset.left + \"px\"));\r\n                            element.style.top = (typeof Image.positionOffset.top == \"string\" ? Image.positionOffset.top : (Image.positionOffset.top + \"px\"));\r\n                        }\r\n                    }\r\n                    return element;\r\n                };\r\n                return Image;\r\n            }()),\r\n            _b.Border = {\r\n                borderWidth: 3,\r\n                borderType: \"solid\",\r\n                borderColor: \"hsl(0deg 0% 50%)\",\r\n                borderRadius: 10,\r\n                backgroundColor: \"#0b0c0d\",\r\n                padding: 10\r\n            },\r\n            _b),\r\n        _a.States = [],\r\n        _a.Dependencies = [],\r\n        _a.StatesTimeInformation = [],\r\n        _a);\r\n    OtherMethods.Methods = (_c = /** @class */ (function () {\r\n            function Methods() {\r\n            }\r\n            Methods.Create = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var object;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        object = document.createElement(\"div\");\r\n                        object.setAttribute(\"Identificator\", global.count.toString());\r\n                        object.setAttribute(\"InstanceIdentificator\", OtherMethods.InstanceIdentificator);\r\n                        object = OtherMethods.Form.Image.ApplyImage(object);\r\n                        if (OtherMethods.Form.Image.Text != null)\r\n                            object.appendChild(document.createTextNode(OtherMethods.Form.Image.Text));\r\n                        Object.values(OtherMethods.Elements).forEach(function (childElement) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b;\r\n                            return __generator(this, function (_c) {\r\n                                switch (_c.label) {\r\n                                    case 0:\r\n                                        global.count += 1;\r\n                                        childElement.Identificator = global.count.toString();\r\n                                        _b = (_a = object).appendChild;\r\n                                        return [4 /*yield*/, childElement.Methods.Create()];\r\n                                    case 1:\r\n                                        _b.apply(_a, [_c.sent()]);\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                        //#endregion ExtensionInterface\r\n                        return [2 /*return*/, object];\r\n                    });\r\n                });\r\n            };\r\n            return Methods;\r\n        }()),\r\n        _c.InformationHandler = (_d = /** @class */ (function () {\r\n                function InformationHandler() {\r\n                }\r\n                InformationHandler.Initialize = function (Information) {\r\n                    InformationHandler[Information.ObjectReference].Initialize(Information);\r\n                };\r\n                //#region Hidden\r\n                InformationHandler.ExtensionLackListeners = function () {\r\n                    //document.body.addEventListener(\"Outline\", function (event: CustomEvent) { InformationHandler.Initialize(event.detail) });\r\n                    Object.values(OtherMethods.Elements).forEach(function (childElement) { return childElement.Methods.InformationHandler.ExtensionLackListeners(); });\r\n                };\r\n                return InformationHandler;\r\n            }()),\r\n            _d.MouseHandler = (_e = /** @class */ (function () {\r\n                    function MouseHandler() {\r\n                    }\r\n                    MouseHandler.Initialize = function (Information) {\r\n                        MouseHandler[Information.Method].CurrentMethod.Run(Information.Identificator, Information.Properties);\r\n                    };\r\n                    return MouseHandler;\r\n                }()),\r\n                _e.HoverIn = (_f = /** @class */ (function () {\r\n                        function HoverIn() {\r\n                        }\r\n                        return HoverIn;\r\n                    }()),\r\n                    _f.CurrentMethod = (_g = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _f.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _g.MethodIndex = 0,\r\n                        _g.Response = false,\r\n                        _g),\r\n                    _f.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _f),\r\n                _e.HoverOut = (_h = /** @class */ (function () {\r\n                        function HoverOut() {\r\n                        }\r\n                        return HoverOut;\r\n                    }()),\r\n                    _h.CurrentMethod = (_j = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _h.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _j.MethodIndex = 0,\r\n                        _j.Response = false,\r\n                        _j),\r\n                    _h.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _h),\r\n                _e.HoverOver = (_k = /** @class */ (function () {\r\n                        function HoverOver() {\r\n                        }\r\n                        return HoverOver;\r\n                    }()),\r\n                    _k.CurrentMethod = (_l = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _k.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _l.MethodIndex = 0,\r\n                        _l.Response = false,\r\n                        _l),\r\n                    _k.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _k),\r\n                _e.LeftClick = (_m = /** @class */ (function () {\r\n                        function LeftClick() {\r\n                        }\r\n                        return LeftClick;\r\n                    }()),\r\n                    _m.CurrentMethod = (_o = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _m.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _o.MethodIndex = 0,\r\n                        _o.Response = false,\r\n                        _o),\r\n                    _m.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _m),\r\n                _e.LeftClickHolding = (_p = /** @class */ (function () {\r\n                        function LeftClickHolding() {\r\n                        }\r\n                        return LeftClickHolding;\r\n                    }()),\r\n                    _p.CurrentMethod = (_q = /** @class */ (function () {\r\n                            function CurrentMethod() {\r\n                            }\r\n                            CurrentMethod.Run = function (Identificator, Properties) {\r\n                                if (CurrentMethod.Response)\r\n                                    _p.OtherMethods[CurrentMethod.MethodIndex](Identificator, Properties);\r\n                            };\r\n                            CurrentMethod.Set = function (MethodIndex) {\r\n                                CurrentMethod.MethodIndex = MethodIndex;\r\n                            };\r\n                            return CurrentMethod;\r\n                        }()),\r\n                        _q.MethodIndex = 0,\r\n                        _q.Response = false,\r\n                        _q),\r\n                    _p.OtherMethods = [\r\n                    /* function (Identificator, Properties) {\r\n\r\n                    } */\r\n                    ],\r\n                    _p),\r\n                _e),\r\n            _d),\r\n        _c);\r\n    OtherMethods.Elements = (_r = /** @class */ (function () {\r\n            function Elements() {\r\n            }\r\n            return Elements;\r\n        }()),\r\n        _r.SpaceMethods = SpaceMethods,\r\n        _r);\r\n    OtherMethods.References = /** @class */ (function () {\r\n        function References() {\r\n        }\r\n        return References;\r\n    }());\r\n    return OtherMethods;\r\n}());\r\nexport { OtherMethods };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./Data/Elements/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Compounds/Document/Document.tsx\");\n",""],"names":[],"sourceRoot":""}